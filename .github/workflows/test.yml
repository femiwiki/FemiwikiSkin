name: Quibble and Phan

on:
  push:
    branches:
      - '*'
    tags-ignore:
      - '*.*'
  pull_request:

env:
  DOCKER_REGISTRY: docker-registry.wikimedia.org
  DOCKER_ORG: releng
  QUIBBLE_DOCKER_IMAGE: quibble-buster-php73
  PHAN_DOCKER_IMAGE: mediawiki-phan-php73

jobs:
  test:
    strategy:
      matrix:
        stage:
          - phan
          - phpunit-unit
          - phpunit
          - phpunit-standalone
          - npm-test
          - composer-test
          # - qunit
          - selenium
          # - api-testing

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      # /home/runner/cache/                            Cache
      # /home/runner/src/                              Mediawiki installation
      # /home/runner/src/skins/REPO_NAME/              Clone of the repository
      # /home/runner/docker-images/                    Docker images which exported with docker-save command
      # $GITHUB_WORKSPACE/.github/workflows/.test-env  Used by actions/cache
      - name: Set up
        run: |
          # Export the target version of MediaWiki
          export MEDIAWIKI_VERSION=REL1_37
          echo MEDIAWIKI_VERSION="${MEDIAWIKI_VERSION}" >> $GITHUB_ENV

          if [ "${{ matrix.stage }}" == 'phan' ]; then
            export DOCKER_IMAGE="${PHAN_DOCKER_IMAGE}"
          else
            export DOCKER_IMAGE="${QUIBBLE_DOCKER_IMAGE}"
          fi
          echo "DOCKER_IMAGE=${DOCKER_IMAGE}" >> $GITHUB_ENV

          # Get the latest docker tag (Ref: https://github.com/thcipriani/dockerregistry)
          DOCKER_LATEST_TAG="$(curl -sL "https://${DOCKER_REGISTRY}/v2/${DOCKER_ORG}/${DOCKER_IMAGE}/tags/list" |
            python3 -c 'import json;print("\n".join(json.loads(input())["tags"]))' |
            grep -v latest | sort -Vr | head -1)"
          echo "DOCKER_LATEST_TAG=${DOCKER_LATEST_TAG}" >> $GITHUB_ENV
          if [ "${{ matrix.stage }}" == 'phan' ]; then
            echo "QUIBBLE_DOCKER_LATEST_TAG=$(curl -sL "https://${DOCKER_REGISTRY}/v2/${DOCKER_ORG}/${QUIBBLE_DOCKER_IMAGE}/tags/list" |
              python3 -c 'import json;print("\n".join(json.loads(input())["tags"]))' |
              grep -v latest | sort -Vr | head -1)" >> $GITHUB_ENV
          fi

          # Resolve dependencies
          if [ -e .github/workflows/dependencies ]; then
            cd .github/workflows
            curl -sL https://raw.githubusercontent.com/wikimedia/integration-config/master/zuul/parameter_functions.py -o pf.py
            curl -sL https://raw.githubusercontent.com/femiwiki/.github/main/scripts/resolve_dependencies.py -o rd.py
            echo "DEPENDENCIES=$(python3 rd.py)" >> $GITHUB_ENV
          fi

      - name: Cache docker image
        uses: actions/cache@v2
        with:
          path: /home/runner/docker-images/${{ env.DOCKER_IMAGE }}
          key: ${{ env.DOCKER_IMAGE }}:${{ env.DOCKER_LATEST_TAG }}
      - name: Load or pull docker image
        run: |
          docker load -i /home/runner/docker-images/"${DOCKER_IMAGE}" || \
            docker pull "${DOCKER_REGISTRY}/${DOCKER_ORG}/${DOCKER_IMAGE}:${DOCKER_LATEST_TAG}"
      - name: Cache quibble docker image
        if: ${{ matrix.stage == 'phan' }}
        uses: actions/cache@v2
        with:
          path: /home/runner/docker-images/${{ env.QUIBBLE_DOCKER_IMAGE }}
          key: ${{ env.QUIBBLE_DOCKER_IMAGE }}:${{ env.QUIBBLE_DOCKER_LATEST_TAG }}
      - name: Load or pull quibble docker image
        if: ${{ matrix.stage == 'phan' }}
        run: |
          docker load -i /home/runner/docker-images/"${QUIBBLE_DOCKER_IMAGE}" || \
            docker pull "${DOCKER_REGISTRY}/${DOCKER_ORG}/${QUIBBLE_DOCKER_IMAGE}:${QUIBBLE_DOCKER_LATEST_TAG}"

      - name: Cache MediaWiki installation
        uses: actions/cache@v2
        with:
          path: /home/runner/src
          key: ${{ runner.os }}-${{ env.MEDIAWIKI_VERSION }}-7a79548-${{ hashFiles('.github/workflows/.test-env') }}
      - name: Download MediaWiki and extensions
        run: |
          cd /home/runner
          if [ ! -d src ]; then
            git clone -b "${MEDIAWIKI_VERSION}" --depth 1 https://gerrit.wikimedia.org/r/mediawiki/core src
            git clone --recurse-submodules -b "${MEDIAWIKI_VERSION}" --depth 1 https://gerrit.wikimedia.org/r/mediawiki/skins/Vector src/skins/Vector
            for dep in $DEPENDENCIES; do
              git clone --recurse-submodules -b "${MEDIAWIKI_VERSION}" --depth 1 "https://gerrit.wikimedia.org/r/${dep}" src/"$(echo $dep | cut -d'/' -f2,3)"
            done
          fi
          git -C src/ log -n 1 --format="%H"

      - name: Cache dependencies (composer and npm)
        uses: actions/cache@v2
        with:
          path: /home/runner/cache
          key: ${{ runner.os }}-${{ env.MEDIAWIKI_VERSION }}-${{ hashFiles('**/*.lock') }}
      - name: Setup PHP Action
        if: ${{ matrix.stage == 'phan' }}
        uses: shivammathur/setup-php@v2
        with:
          php-version: '7.3'
          tools: composer:v1
      - name: Composer install
        if: ${{ matrix.stage == 'phan' }}
        run: |
          composer install --prefer-dist --no-progress --no-interaction # $GITHUB_WORKSPACE
      - name: Setup Node.js environment
        uses: actions/setup-node@v2
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v2
        id: yarn-cache
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: ${{ runner.os }}-yarn-
      # Use npm as Quibble is not compatible with yarn.
      - run: npm install
      - name: Main Test
        run: |
          cd /home/runner
          # Move our repository
          sudo cp -r "${GITHUB_WORKSPACE}" src/skins/Femiwiki
          mkdir -p cache cover
          chmod 777 src cache cover
          # chown cache/ https://github.com/femiwiki/.github/issues/3
          sudo chown -R nobody:nogroup src cache
          sudo chown $(id -u):$(id -g) src cache
          # Composer install
          if [ "${{ matrix.stage }}" == 'phan' ] || [ "${{ matrix.stage }}" == 'coverage' ]; then
            docker run \
              -e ZUUL_PROJECT=mediawiki/skins/Femiwiki \
              -v "$(pwd)"/cache:/cache \
              -v "$(pwd)"/src:/workspace/src \
              "${DOCKER_REGISTRY}/${DOCKER_ORG}/${QUIBBLE_DOCKER_IMAGE}:${QUIBBLE_DOCKER_LATEST_TAG}" \
              --skip-zuul \
              --packages-source composer \
              --skip-install \
              --skip all \
              $DEPENDENCIES
          fi

          if [ "${{ matrix.stage }}" == 'phan' ]; then
            docker run \
              -e THING_SUBNAME=skins/Femiwiki \
              -v "$(pwd)"/src:/mediawiki \
              "${DOCKER_REGISTRY}/${DOCKER_ORG}/${DOCKER_IMAGE}:${DOCKER_LATEST_TAG}" \
              --color
          else
            docker run \
              -e ZUUL_PROJECT=mediawiki/skins/Femiwiki \
              -v "$(pwd)"/cache:/cache \
              -v "$(pwd)"/src:/workspace/src \
              "${DOCKER_REGISTRY}/${DOCKER_ORG}/${DOCKER_IMAGE}:${DOCKER_LATEST_TAG}" \
              --skip-zuul \
              --packages-source composer \
              --run "${{ matrix.stage }}" \
              $DEPENDENCIES
            fi

      - name: Tear down
        run: |
          cd /home/runner
          sudo rm -rf src/skins/Femiwiki
          # See https://doc.wikimedia.org/quibble/index.html#remove-localsettings-php-between-runs
          rm "$(pwd)"/src/LocalSettings.php || true
          mkdir -p docker-images
          docker save -o "$(pwd)/docker-images/${DOCKER_IMAGE}" \
            "${DOCKER_REGISTRY}/${DOCKER_ORG}/${DOCKER_IMAGE}:${DOCKER_LATEST_TAG}"
